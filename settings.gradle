include ':library', ":library-no-op"
if (!System.env.JITPACK) include ':sample', ':samplehms', ':samplejava'

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            version('sdk', '2.1.1-SNAPSHOT')
            version('kotlin', '1.9.24')
            version('coroutines', '1.8.0')
            version('kodein', '7.21.2')
            version('retrofit', '2.11.0')
            version('moshi', '1.15.1')
            version("work", "2.9.0")

            plugin('dokka', 'org.jetbrains.dokka').version("1.9.20")
            plugin('validator', 'org.jetbrains.kotlinx.binary-compatibility-validator').version('0.14.0')

            library('timber', 'com.jakewharton.timber:timber:5.0.1')

            library('coroutines-core', 'org.jetbrains.kotlinx', 'kotlinx-coroutines-core').versionRef('coroutines')
            library('coroutines-android', 'org.jetbrains.kotlinx', 'kotlinx-coroutines-android').versionRef('coroutines')
            library('coroutines-guava', 'org.jetbrains.kotlinx', 'kotlinx-coroutines-guava').versionRef('coroutines')

            library('kodein', 'org.kodein.di', 'kodein-di').versionRef('kodein')

            library('retrofit', 'com.squareup.retrofit2', 'retrofit').versionRef('retrofit')
            library('retrofit-moshi', 'com.squareup.retrofit2', 'converter-moshi').versionRef('retrofit')

            library('moshi', 'com.squareup.moshi', 'moshi').versionRef('moshi')
            library('moshi-codegen', 'com.squareup.moshi', 'moshi-kotlin-codegen').versionRef('moshi')
            library('moshi-adapters', 'com.squareup.moshi', 'moshi-adapters').versionRef('moshi')

            library('okhttp-bom', 'com.squareup.okhttp3:okhttp-bom:4.12.0')

            library('firebase-bom', 'com.google.firebase:firebase-bom:33.1.0')

            library('hms-push', 'com.huawei.hms:push:6.13.0.300')
            library('hms-agconnect', 'com.huawei.agconnect:agconnect-core:1.9.1.304')

            library('androidx-preference', 'androidx.preference:preference-ktx:1.2.1')
            library('androidx-work-runtime', 'androidx.work', 'work-runtime-ktx').versionRef("work")
            library('androidx-work-gcm', 'androidx.work', 'work-gcm').versionRef("work")
            library('androidx-appcompat', 'androidx.appcompat:appcompat:1.6.1')
            library('androidx-constraintlayout', 'androidx.constraintlayout:constraintlayout:2.1.4')
            library('androidx-lifecycle', 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0')
        }
    }
}
